/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Aplikasi;

import Config.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DARMAWAN
 */
public class FormBuku extends javax.swing.JFrame {
    
    private Connection conn;
    
    public FormBuku() {
        if(!FormLogin.isMulai()) {
            JOptionPane.showMessageDialog(this, "Anda harus login terlebih dahulu.");
            new FormLogin().setVisible(true);
            dispose();
            setUndecorated(true); // method ini dipanggil krn meskipun di dispose, title bar tetap terlihat
        } else {
            initComponents();
            
            conn = Koneksi.getKoneksi();
            getData();
            resetForm();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        background = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        formInputBuku = new javax.swing.JPanel();
        lblJenis = new javax.swing.JLabel();
        lblIDBuku = new javax.swing.JLabel();
        lblJudul = new javax.swing.JLabel();
        lblPengarang = new javax.swing.JLabel();
        lblTahun = new javax.swing.JLabel();
        lblHarga = new javax.swing.JLabel();
        lblSubJenis = new javax.swing.JLabel();
        lblSubjekGenre = new javax.swing.JLabel();
        txtIDBuku = new javax.swing.JTextField();
        txtJudul = new javax.swing.JTextField();
        txtTahun = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        txtSubJenis = new javax.swing.JTextField();
        txtSubjekGenre = new javax.swing.JTextField();
        cmbJenis = new javax.swing.JComboBox<>();
        txtPengarang = new javax.swing.JTextField();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelBuku = new javax.swing.JTable();
        lblCari = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();
        lblHome = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Form Buku");
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        background.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Data Buku");

        formInputBuku.setBackground(new java.awt.Color(255, 255, 255));

        lblJenis.setText("Jenis Buku");

        lblIDBuku.setText("ID Buku");

        lblJudul.setText("Judul Buku");

        lblPengarang.setText("Pengarang");

        lblTahun.setText("Tahun Terbit");

        lblHarga.setText("Harga");

        lblSubJenis.setText("Sub Jenis");

        lblSubjekGenre.setText("Subjek (Non Fiksi) / Genre (Fiksi)");

        txtTahun.setText("0");

        txtHarga.setText("0");

        cmbJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Non Fiksi", "Fiksi" }));

        javax.swing.GroupLayout formInputBukuLayout = new javax.swing.GroupLayout(formInputBuku);
        formInputBuku.setLayout(formInputBukuLayout);
        formInputBukuLayout.setHorizontalGroup(
            formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formInputBukuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(formInputBukuLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(formInputBukuLayout.createSequentialGroup()
                                .addComponent(lblSubjekGenre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSubjekGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(formInputBukuLayout.createSequentialGroup()
                                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPengarang)
                                    .addComponent(lblTahun))
                                .addGap(117, 117, 117)
                                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTahun, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, 786, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14))))
                    .addGroup(formInputBukuLayout.createSequentialGroup()
                        .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, formInputBukuLayout.createSequentialGroup()
                                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblSubJenis, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblHarga, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
                                    .addComponent(txtSubJenis)))
                            .addGroup(formInputBukuLayout.createSequentialGroup()
                                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblJenis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblIDBuku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblJudul, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtJudul)
                                    .addComponent(txtIDBuku, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbJenis, javax.swing.GroupLayout.Alignment.LEADING, 0, 786, Short.MAX_VALUE))))
                        .addGap(14, 14, 14))))
        );
        formInputBukuLayout.setVerticalGroup(
            formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formInputBukuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblJenis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtIDBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIDBuku))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJudul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblJudul))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPengarang)
                    .addComponent(txtPengarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTahun, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTahun))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHarga))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSubJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSubJenis))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formInputBukuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSubjekGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSubjekGenre))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnTambah.setBackground(new java.awt.Color(255, 204, 204));
        btnTambah.setText("TAMBAH");
        btnTambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setBackground(new java.awt.Color(255, 204, 204));
        btnUbah.setText("UBAH");
        btnUbah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setBackground(new java.awt.Color(255, 204, 204));
        btnHapus.setText("HAPUS");
        btnHapus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnBatal.setBackground(new java.awt.Color(255, 204, 204));
        btnBatal.setText("BATAL");
        btnBatal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        tabelBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Jenis Buku", "ID Buku", "Judul Buku", "Pengarang", "Tahun Terbit", "Harga", "Sub Jenis", "Subjek / Genre"
            }
        ));
        tabelBuku.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tabelBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelBuku);

        lblCari.setText("Pencarian");

        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        txtCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCariKeyTyped(evt);
            }
        });

        lblHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/home.png"))); // NOI18N
        lblHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblHomeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formInputBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 988, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(lblCari, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtCari))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(backgroundLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblHome)))
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(lblHome))
                .addGap(12, 12, 12)
                .addComponent(formInputBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCari))
                .addGap(14, 14, 14))
        );

        getContentPane().add(background, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void getData() {
        DefaultTableModel model = (DefaultTableModel) tabelBuku.getModel();
        model.setRowCount(0);
        
        try {
            String sql = "SELECT * FROM buku";
            PreparedStatement stmt = conn.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()) {
                String jenis = rs.getString("jenis");
                String idBuku = rs.getString("id_buku");
                String judul = rs.getString("judul");
                String pengarang = rs.getString("pengarang");
                int tahun = rs.getInt("tahun_terbit");
                double harga = rs.getDouble("harga");
                String subJenis = rs.getString("sub_jenis");
                String subjekGenre = rs.getString("subjek_genre");
                
                Object[] rowData = {jenis,idBuku,judul,pengarang,tahun,harga,subJenis,subjekGenre};
                model.addRow(rowData);
            }
            rs.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Tidak dapat menampilkan database. Kesalahan: " + e.getMessage());
        }
    }
    
    private void resetForm() {
        txtIDBuku.setEditable(true); // memastikan agar txtIDBuku bisa diedit
        btnTambah.setEnabled(true);
        btnUbah.setEnabled(false);
        btnHapus.setEnabled(false);
        txtIDBuku.setText("");
        txtJudul.setText("");
        txtPengarang.setText("");
        txtTahun.setText("0");
        txtHarga.setText("0");
        txtSubJenis.setText("");
        txtSubjekGenre.setText("");
    }
    
    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCariActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        resetForm();
    }//GEN-LAST:event_btnBatalActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        String jenis = cmbJenis.getSelectedItem().toString();
        String idBuku = txtIDBuku.getText();
        String judul = txtJudul.getText();
        String pengarang = txtPengarang.getText();
        int tahun;
        double harga;
        String textTahun = txtTahun.getText();
        String textHarga = txtHarga.getText();
        String subJenis = txtSubJenis.getText();
        String subjekGenre = txtSubjekGenre.getText();
        
        // jika data tidak diisi atau kosong, akan diberikan peringatan melalui msgbox
        // sebelum diubah menjadi variabel tahun dan harga, textTahun dan textHarga dicek sebelum dikonversi ke int
        if(idBuku.isEmpty() || judul.isEmpty() || pengarang.isEmpty() || subJenis.isEmpty() || subjekGenre.isEmpty() || textTahun.isEmpty() || textHarga.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Data tidak boleh ada yang kosong.");
            return;
        } else {
            try {
                tahun = Integer.parseInt(textTahun); // diubah jadi int krn textTahun bertipe data string
                harga = Double.parseDouble(textHarga); // diubah jadi double krn textHarga bertipe data string
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Tahun terbit atau harga harus berupa angka.");
                return;
            }
        }
        
        try {
            String sql = "INSERT INTO buku VALUES (?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, jenis);
            stmt.setString(2, idBuku);
            stmt.setString(3, judul);
            stmt.setString(4, pengarang);
            stmt.setInt(5, tahun);
            stmt.setDouble(6, harga);
            stmt.setString(7, subJenis);
            stmt.setString(8, subjekGenre);
            int rowInserted = stmt.executeUpdate();
            if(rowInserted > 0) {
                JOptionPane.showMessageDialog(this, "Data Berhasil Ditambahkan!");
                resetForm();
                getData();
            }
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Tidak dapat menambah data. Kesalahan: " + e.getMessage());
        }
    }//GEN-LAST:event_btnTambahActionPerformed

    private void tabelBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBukuMouseClicked
        int barisTerpilih = tabelBuku.getSelectedRow();
        // jika terdapat baris yang terpilih
        if(barisTerpilih != -1) {
            String jenis = tabelBuku.getValueAt(barisTerpilih, 0).toString();
            String idBuku = tabelBuku.getValueAt(barisTerpilih, 1).toString();
            String judul = tabelBuku.getValueAt(barisTerpilih, 2).toString();
            String pengarang = tabelBuku.getValueAt(barisTerpilih, 3).toString();
            String textTahun = tabelBuku.getValueAt(barisTerpilih, 4).toString();
            String textHarga = tabelBuku.getValueAt(barisTerpilih, 5).toString();
            String subJenis = tabelBuku.getValueAt(barisTerpilih, 6).toString();
            String subjekGenre = tabelBuku.getValueAt(barisTerpilih, 7).toString();
            
            cmbJenis.setSelectedItem(jenis);
            txtIDBuku.setText(idBuku);
            txtJudul.setText(judul);
            txtPengarang.setText(pengarang);
            txtTahun.setText(textTahun);
            txtHarga.setText(textHarga);
            txtSubJenis.setText(subJenis);
            txtSubjekGenre.setText(subjekGenre);
            
            txtIDBuku.setEditable(false); // jika ingin mengubah data, maka idBuku tidak dapat diubah
            // setting agar hanya btnEdit, btnHapus, dan btnBatal yang dienabled
            btnTambah.setEnabled(false);
            btnUbah.setEnabled(true);
            btnHapus.setEnabled(true);
        }
    }//GEN-LAST:event_tabelBukuMouseClicked
    
    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        int barisTerpilih = tabelBuku.getSelectedRow();
        // jika tidak ada baris yang terseleksi
        if(barisTerpilih == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang akan diubah!");
            return;
        }
        
        // mengambil data yang sudah diubah
        String jenis = cmbJenis.getSelectedItem().toString();
        String idBuku = txtIDBuku.getText();
        String judul = txtJudul.getText();
        String pengarang = txtPengarang.getText();
        int tahun;
        double harga;
        String textTahun = txtTahun.getText();
        String textHarga = txtHarga.getText();
        String subJenis = txtSubJenis.getText();
        String subjekGenre = txtSubjekGenre.getText();
        
        // jika data tidak diisi atau kosong, akan diberikan peringatan melalui msgbox
        // sebelum diubah menjadi variabel tahun dan harga, textTahun dan textHarga dicek sebelum dikonversi ke int
        if(idBuku.isEmpty() || judul.isEmpty() || pengarang.isEmpty() || subJenis.isEmpty() || subjekGenre.isEmpty() || textTahun.isEmpty() || textHarga.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Data tidak boleh ada yang kosong.");
            return;
        } else {
            try {
                tahun = Integer.parseInt(textTahun); // diubah jadi int krn textTahun bertipe data string
                harga = Double.parseDouble(textHarga); // diubah jadi double krn textHarga bertipe data string
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Tahun terbit atau harga harus berupa angka.");
                return;
            }
        }
        
        try {
            String sql = "UPDATE buku SET jenis = ?, judul = ?, pengarang = ?, tahun_terbit = ?, harga = ?, sub_jenis = ?, subjek_genre = ? WHERE id_buku = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, jenis);
            stmt.setString(2, judul);
            stmt.setString(3, pengarang);
            stmt.setInt(4, tahun);
            stmt.setDouble(5, harga);
            stmt.setString(6, subJenis);
            stmt.setString(7, subjekGenre);
            stmt.setString(8, idBuku);
            int rowUpdated = stmt.executeUpdate();
            if(rowUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Data Berhasil Diubah!");
                resetForm();
                getData();
            }
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Tidak dapat mengubah data. Kesalahan: " + e.getMessage());
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int barisTerpilih = tabelBuku.getSelectedRow();
        // jika tidak ada baris yang terseleksi
        if(barisTerpilih == -1) {
            JOptionPane.showMessageDialog(this, "Pilih baris yang akan dihapus!");
            return;
        }
        
        int confirm = JOptionPane.showConfirmDialog(this, "Apakah Anda yakin ingin menghapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if(confirm == JOptionPane.YES_OPTION) {
            String idBuku = tabelBuku.getValueAt(barisTerpilih, 1).toString();
            
            try {
                String sql = "DELETE FROM buku WHERE id_buku = ?";
                PreparedStatement stmt = conn.prepareStatement(sql);
                stmt.setString(1, idBuku);
                int rowDeleted = stmt.executeUpdate();
                if(rowDeleted > 0) {
                    JOptionPane.showMessageDialog(this, "Data Berhasil Dihapus!");
                    resetForm();
                    getData();
                }
                stmt.close();
            } catch(SQLException e) {
                JOptionPane.showMessageDialog(this, "Tidak dapat menghapus data. Kesalahan: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtCariKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCariKeyTyped
        DefaultTableModel model = (DefaultTableModel) tabelBuku.getModel();
        model.setRowCount(0);
        
        String cari = txtCari.getText();
        try {
            String sql = "SELECT * FROM buku WHERE jenis LIKE ? OR id_buku LIKE ? OR judul LIKE ? OR pengarang LIKE ? OR tahun_terbit LIKE ? OR harga LIKE ? OR sub_jenis LIKE ? OR subjek_genre LIKE ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, "%" + cari + "%");
            stmt.setString(2, cari + "%");
            stmt.setString(3, "%" + cari + "%");
            stmt.setString(4, "%" + cari + "%");
            stmt.setString(5, "%" + cari + "%");
            stmt.setString(6, "%" + cari + "%");
            stmt.setString(7, "%" + cari + "%");
            stmt.setString(8, "%" + cari + "%");
            ResultSet rs = stmt.executeQuery();
            
            while(rs.next()) {
                String jenis = rs.getString("jenis");
                String idBuku = rs.getString("id_buku");
                String judul = rs.getString("judul");
                String pengarang = rs.getString("pengarang");
                int tahun = rs.getInt("tahun_terbit");
                double harga = rs.getDouble("harga");
                String subJenis = rs.getString("sub_jenis");
                String subjekGenre = rs.getString("subjek_genre");
                
                Object[] rowData = {jenis,idBuku,judul,pengarang,tahun,harga,subJenis,subjekGenre};
                model.addRow(rowData);
            }
            rs.close();
            stmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Tidak dapat menampilkan database. Kesalahan: " + e.getMessage());
        }
    }//GEN-LAST:event_txtCariKeyTyped

    private void lblHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblHomeMouseClicked
        FormMenuUtama utama = new FormMenuUtama();
        utama.setVisible(true);
        
        dispose();
    }//GEN-LAST:event_lblHomeMouseClicked

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel background;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> cmbJenis;
    private javax.swing.JPanel formInputBuku;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCari;
    private javax.swing.JLabel lblHarga;
    private javax.swing.JLabel lblHome;
    private javax.swing.JLabel lblIDBuku;
    private javax.swing.JLabel lblJenis;
    private javax.swing.JLabel lblJudul;
    private javax.swing.JLabel lblPengarang;
    private javax.swing.JLabel lblSubJenis;
    private javax.swing.JLabel lblSubjekGenre;
    private javax.swing.JLabel lblTahun;
    private javax.swing.JTable tabelBuku;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtIDBuku;
    private javax.swing.JTextField txtJudul;
    private javax.swing.JTextField txtPengarang;
    private javax.swing.JTextField txtSubJenis;
    private javax.swing.JTextField txtSubjekGenre;
    private javax.swing.JTextField txtTahun;
    // End of variables declaration//GEN-END:variables
}
